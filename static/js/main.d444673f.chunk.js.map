{"version":3,"sources":["common/Helpers.tsx","common/DataConector.tsx","app/ViewHome.tsx","app/ViewLocationList.tsx","app/ViewLocationMap.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["Helpers","params","Object","keys","map","key","filter","Boolean","join","url","window","location","href","ax","split","reload","open","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","qs","require","DC","postData","axios","method","data","stringify","headers","this","header","catch","error","console","log","undefined","response","wasOk","FormData","form","current","getData","ObjectToQueryString","ViewHome","props","state","items","onActionClick","bind","pageLoading","length","Get","content","setState","e","preventDefault","onActionChange","currentTarget","dataset","code","item","index","type","className","text","onClick","data-code","action","renderType","React","Component","ViewLocationList","onMapClick","onMapOpenClick","onGoogleMapClick","parseInt","PageOpen","locations","latitude","longitude","name","category","distance","toFixed","data-index","ViewLocationMap","mapRef","locationIndex","createRef","onDetailsCloseClick","onListClick","mapCenterClick","leafletElement","panTo","centerLat","locationSelectedIndex","centerLon","Map","center","zoom","maxZoom","minZoom","ref","TileLayer","attribution","Marker","position","App","isLoading","menuShow","viewCode","onHomeClick","locationSort","base","navigator","geolocation","getCurrentPosition","coords","err","x","Distance","sort","a","b","active","role","renderMain","target","src","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.d444673f.chunk.js","sourcesContent":["class Helpers {\n    public static ObjectToQueryString(params:any) {\n        return Object.keys(params).map(key => params[key] ? key + '=' + params[key] : null).filter(Boolean).join('&');\n    }\n\n    public static PageLoad(url:string) {\n        window.location.href = url;\n    }\n\n    public static PageReload(key:string) {\n        if (key) {\n            let ax = window.location.href.split('#');\n            window.location.href = ax[0] + key;\n            window.location.reload(false);\n        } else\n            window.location.reload(false);\n    }\n\n    public static PageOpen(url:string){\n        window.open(url, '_blank');\n    }\n    public static Distance(lat1:number, lon1:number, lat2:number, lon2:number) {\n        let unit = 'K';\n        if ((lat1 == lat2) && (lon1 == lon2)) {\n            return 0;\n        }\n        else {\n            var radlat1 = Math.PI * lat1/180;\n            var radlat2 = Math.PI * lat2/180;\n            var theta = lon1-lon2;\n            var radtheta = Math.PI * theta/180;\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n            if (dist > 1) {\n                dist = 1;\n            }\n            dist = Math.acos(dist);\n            dist = dist * 180/Math.PI;\n            dist = dist * 60 * 1.1515;\n            if (unit==\"K\") { dist = dist * 1.609344 }\n            if (unit==\"N\") { dist = dist * 0.8684 }\n            return dist;\n        }\n    }\n}\n\nexport default Helpers;\n\n","import axios from 'axios';\nimport Helpers from \"./Helpers\"\nconst qs = require(\"qs\");\n\nclass DC {\n    static header() {\n        return {};\n    }\n    public static async Post(postData: any) {\n        const url = postData.url;\n        delete postData.url;\n        const response = await axios({\n            method: 'post',\n            url: url,\n            data: qs.stringify(postData),\n            headers: this.header()\n        }).catch(error => {\n            console.log(error);\n        });\n        if (response !== undefined) return response.data; else return {wasOk: false};\n    }\n\n    public static async PostForm(postData: any) {\n        const data = new FormData(postData.form.current);\n        const response = await axios({\n            method: 'post',\n            url: postData.url,\n            data: data,\n            headers: {'Content-Type': 'multipart/form-data'}\n        }).catch(error => {\n            console.log(error);\n        });\n        if (response !== undefined) return response.data; else return {wasOk: false};\n    }\n\n    public static async Get(getData: any) {\n        var url = getData.url;\n        delete getData.url;\n        url = url + '?' + Helpers.ObjectToQueryString(getData);\n\n        const response = await axios({\n            method: 'get',\n            url: url,\n            headers: this.header()\n        }).catch(error => {\n            console.log(error);\n        });\n\n        if (response !== undefined) return response.data; else return {wasOk: false};\n    }\n}\n\nexport default DC;","import React from 'react';\nimport './ViewHome.css';\nimport DC from \"../common/DataConector\";\n\ninterface HomeItem{\n    type:string,\n    text:string,\n    action: string\n}\n\ninterface State {\n    items:HomeItem[]\n}\n\ninterface Props {\n    pageLoading:(loading:boolean) => void;\n    onActionChange:(action:string,index:number) => void;\n}\n\nclass ViewHome extends React.Component<Props,State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            items: []\n        };\n        this.onActionClick = this.onActionClick.bind(this)\n    }\n\n    async componentDidMount() {\n        this.props.pageLoading(true);\n        if (this.state.items.length === 0) {\n            const getData = {url: '/gvpysalud/data/home.json'}\n            let content = await DC.Get(getData);\n            this.setState({items: content});\n        }\n        this.props.pageLoading(false);\n    }\n\n    onActionClick(e:any) {\n        e.preventDefault();\n        this.props.onActionChange(e.currentTarget.dataset.code,-1);\n    }\n\n    renderType(item: any, index: number) {\n        switch (item.type) {\n            case 'h1':\n                return <h1 className=\"text-center\">{item.text}</h1>\n            case 'h2':\n                return <h2 className=\"text-center\">{item.text}</h2>\n            case 'p':\n                return <p>{item.text}</p>\n            case 'btn':\n                return <p><button className=\"btn btn-primary\" onClick={this.onActionClick} data-code={item.action}>{item.text}</button></p>\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row mt-3\">\n                    {this.state.items.map((item, index) => (\n                        <div className=\"col-12\" key={index}>\n                            {this.renderType(item, index)}\n                        </div>\n                    ))}\n                </div>\n                <div>\n                    <br/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ViewHome;\n","import React from 'react';\nimport LocationModel from \"../models/LocationModel\";\nimport Helpers from \"../common/Helpers\"\n\ninterface State {\n}\n\ninterface Props {\n    locations:LocationModel[]\n    onActionChange:(action:string,index:number) => void;\n}\n\nclass ViewLocationList extends React.Component<Props,State> {\n    constructor(props:Props) {\n        super(props);\n        this.state = {};\n        this.onMapClick = this.onMapClick.bind(this)\n        this.onMapOpenClick = this.onMapOpenClick.bind(this)\n        this.onGoogleMapClick = this.onGoogleMapClick.bind(this)\n    }\n\n    onMapClick(e:any) {\n        e.preventDefault();\n        this.props.onActionChange('locations-map',-1)\n    }\n\n    onMapOpenClick(e:any) {\n        e.preventDefault();\n        const index = parseInt(e.currentTarget.dataset.index);\n        this.props.onActionChange('locations-map',index)\n    }\n\n    onGoogleMapClick(e:any) {\n        e.preventDefault();\n        const index = parseInt(e.currentTarget.dataset.index);\n        Helpers.PageOpen('https://www.google.com/maps/@'+this.props.locations[index].latitude+','+this.props.locations[index].longitude+',17z')\n    }\n\n    render() {\n        return (\n            <div className=\"container locations\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                    <ul className=\"list-group mt-3\">\n                        {this.props.locations.map((item, index) => (\n                            <li className=\"list-group-item location\" key={index}>\n                                <h3>{item.name}</h3>\n                                 <span className=\"badge badge-info\">{item.category}</span>\n                                 <span className=\"badge badge-primary pull-right\">{item.distance.toFixed(2)}km</span>\n                                <div className=\"text-right\">\n\n                                        <button className=\"btn btn-info btn-sm col-xl-3 col-4 mr-2\" data-index={index} onClick={this.onMapOpenClick}>Ver en Mapa</button>\n\n                                        <button className=\"btn btn-outline-info btn-sm col-xl-3 col-4\" data-index={index} onClick={this.onGoogleMapClick}>Google</button>\n\n\n\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                    </div>\n                </div>\n\n                <div className=\"buttons-left mr-3 ml-3\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onMapClick} >\n                        Mapa\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ViewLocationList;\n","import React from 'react';\nimport LocationModel from \"../models/LocationModel\";\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\n\nimport \"./ViewLocationMap.css\"\n\ninterface State {\n    locationIndex:number,\n}\n\ninterface Props {\n    locations:LocationModel[]\n    onActionChange:(action:string,index:number) => void;\n    latitude:number,\n    longitude:number,\n    locationSelectedIndex:number\n}\n\nclass ViewLocationMap extends React.Component<Props,State> {\n    mapRef:any;\n    map:any;\n    constructor(props:Props) {\n        super(props);\n        this.state = {\n            locationIndex:-1\n        };\n\n        this.mapRef = React.createRef();\n        this.onDetailsCloseClick = this.onDetailsCloseClick.bind(this)\n        this.onListClick = this.onListClick.bind(this)\n        this.mapCenterClick = this.mapCenterClick.bind(this)\n    }\n\n    componentDidMount() {\n        this.map = this.mapRef.current.leafletElement;\n    }\n\n    onDetailsCloseClick(e:any) {\n        e.preventDefault();\n        this.setState({locationIndex:-1})\n    }\n\n    onListClick(e:any) {\n        e.preventDefault();\n        this.props.onActionChange('locations-list',-1)\n    }\n    mapCenterClick(e:any){\n       this.map.panTo([this.props.latitude,this.props.longitude]);\n    }\n\n    render() {\n        let item:any = this.state.locationIndex >-1?this.props.locations[this.state.locationIndex]:{};\n        let centerLat:number = this.props.locationSelectedIndex == -1? this.props.latitude:this.props.locations[this.props.locationSelectedIndex].latitude;\n        let centerLon:number= this.props.locationSelectedIndex == -1? this.props.longitude:this.props.locations[this.props.locationSelectedIndex].longitude;\n\n        return (\n            <div className=\"container locations\">\n                {this.state.locationIndex >-1 &&  <div className=\"location-details\">\n                    <i className=\"fa fa-close float-right p-2\" onClick={this.onDetailsCloseClick} />\n                    <h3>{item.name}</h3>\n                    <span className=\"badge badge-info\">{item.category}</span>\n                    <span className=\"badge badge-primary pull-right\">{item.distance.toFixed(2)}km</span>\n\n                </div>}\n                <Map center={[centerLat,centerLon]} zoom={12} maxZoom={17} minZoom={8} ref={this.mapRef}>\n                    <TileLayer\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    />\n                    {this.props.locations.map((item, index) => (\n                        <Marker\n                            key={index}\n                            position={[\n                                item.latitude,\n                                item.longitude\n                            ]}\n                            onClick={() => {\n                                this.setState({locationIndex:index})\n                            }}\n                        />\n                    ))}\n                </Map>\n                <div className=\"buttons-left mr-3 ml-3\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.onListClick} >\n                        Lista\n                    </button>\n                </div>\n                <div className=\"buttons-right mr-3 ml-3\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.mapCenterClick} >\n                        <i className=\"fa fa-crosshairs\" />\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ViewLocationMap;\n","import React from 'react';\nimport ViewHome from \"./ViewHome\";\nimport Helpers from \"../common/Helpers\"\nimport ViewLocationList from \"./ViewLocationList\"\nimport ViewLocationMap from \"./ViewLocationMap\"\nimport DC from \"../common/DataConector\";\nimport LocationModel from \"../models/LocationModel\"\n\ninterface State {\n    isLoading: boolean,\n    menuShow: boolean,\n    viewCode: string,\n    locationSelectedIndex:number,\n    locations: LocationModel[],\n    latitude: number,\n    longitude: number,\n}\n\ninterface Props {\n}\n\nclass App extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoading: true,\n            menuShow: false,\n            viewCode: 'home',\n            locationSelectedIndex:-1,\n            locations: [],\n            latitude: -24.6728445,\n            longitude: -56.706004\n        }\n\n        this.pageLoading = this.pageLoading.bind(this)\n        this.onHomeClick = this.onHomeClick.bind(this)\n        this.onActionChange = this.onActionChange.bind(this)\n        this.locationSort = this.locationSort.bind(this)\n    }\n\n    async componentDidMount() {\n\n        this.pageLoading(true);\n        let latitude = -24.6728445;\n        let longitude = -56.706004;\n\n        let base = this;\n        await navigator.geolocation.getCurrentPosition(function (position) {\n                latitude = position.coords.latitude;\n                longitude = position.coords.longitude;\n                base.setState({\n                    latitude: position.coords.latitude,\n                    longitude: position.coords.longitude\n                })\n                base.locationSort(latitude, longitude);\n            },\n            function (err) {\n                base.locationSort(latitude, longitude);\n            }\n        );\n\n    }\n\n    async locationSort(latitude: number, longitude: number) {\n\n        const getData = {url: '/gvpysalud/data/locations.json'}\n        let content = await DC.Get(getData);\n        for (let x = 0; x < content.length; x++) {\n            content[x].distance = Helpers.Distance(latitude, longitude, content[x].latitude, content[x].longitude)\n        }\n        content.sort((a: any, b: any) => (a.distance > b.distance) ? 1 : ((b.distance > a.distance) ? -1 : 0));\n        this.setState({locations: content, isLoading: false})\n\n        this.pageLoading(false);\n    }\n\n    pageLoading(active: boolean) {\n        this.setState({isLoading: active})\n    }\n\n    onHomeClick(e: any) {\n        e.preventDefault();\n        this.setState({viewCode: 'home'})\n    }\n\n    onActionChange(action: string, index:number) {\n        this.setState({viewCode: action, locationSelectedIndex:index})\n    }\n\n    renderMain() {\n        switch (this.state.viewCode) {\n            case \"home\":\n                return <ViewHome pageLoading={this.pageLoading} onActionChange={this.onActionChange}/>\n            case \"locations-list\":\n                return <ViewLocationList locations={this.state.locations} onActionChange={this.onActionChange}/>\n            case \"locations-map\":\n                return <ViewLocationMap locations={this.state.locations} onActionChange={this.onActionChange} locationSelectedIndex={this.state.locationSelectedIndex}\n                                        latitude={this.state.latitude} longitude={this.state.longitude}/>\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.isLoading && <div className=\"is-loading\">\n                    <div className=\"spinner\">\n                        <div className=\"double-bounce1\"/>\n                        <div className=\"double-bounce2\"/>\n                    </div>\n                </div>}\n                <header className=\"blog-header py-3\">\n                    <div className=\"row flex-nowrap justify-content-between align-items-center\">\n                        <div className=\"col-4 pt-1 pointer\" onClick={this.onHomeClick}>\n                            {this.state.viewCode !== 'home' && <i className=\"fa fa-home\"/>}\n                        </div>\n                        <div className=\"col-4 text-center pointer\" onClick={this.onHomeClick}>\n                            Map Viewer\n                        </div>\n                        <div className=\"col-4 d-flex justify-content-end align-items-center\">\n                        </div>\n                    </div>\n                </header>\n                <main role=\"main\" className=\"container\">\n                    {this.renderMain()}\n                    <br/>\n                </main>\n                <footer>\n                    Desarrollado por <a href=\"https://geovoluntarios.org\" target=\"_blank\"> <img\n                    src=\"/gvpysalud/images/logo192.png\"/></a>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/bootstrap.min.css'\nimport './styles/index.css'\nimport './styles/index_loading.css'\nimport './styles/index_animation.css'\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}